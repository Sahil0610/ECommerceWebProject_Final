// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProject_ECommerceBackend.Data;

#nullable disable

namespace WebProject_ECommerceBackend.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20250806185401_AddProductReviewTable")]
    partial class AddProductReviewTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebProject_ECommerceBackend.Entities.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("WebProject_ECommerceBackend.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebProject_ECommerceBackend.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("productPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            productDescription = "High-back ergonomic chair with mesh design and lumbar support.",
                            productImageUrl = "/Assets/Images/1.png",
                            productName = "ErgoMesh Office Chair",
                            productPrice = 159.99m
                        },
                        new
                        {
                            ProductId = 2,
                            productDescription = "Stylish mid-century modern armchair with walnut finish and grey upholstery.",
                            productImageUrl = "/Assets/Images/2.png",
                            productName = "Walnut Accent Armchair",
                            productPrice = 219.99m
                        },
                        new
                        {
                            ProductId = 3,
                            productDescription = "Plush recliner with adjustable back and footrest for living rooms.",
                            productImageUrl = "/Assets/Images/3.png",
                            productName = "Reclining Lounge Chair",
                            productPrice = 299.99m
                        },
                        new
                        {
                            ProductId = 4,
                            productDescription = "Set of 4 modern dining chairs with cushioned seats and wooden legs.",
                            productImageUrl = "/Assets/Images/4.png",
                            productName = "Dining Chair Set (4 pcs)",
                            productPrice = 249.99m
                        },
                        new
                        {
                            ProductId = 5,
                            productDescription = "Traditional wooden rocking chair ideal for nurseries and porches.",
                            productImageUrl = "/Assets/Images/6.png",
                            productName = "Rocking Chair Classic",
                            productPrice = 179.99m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
